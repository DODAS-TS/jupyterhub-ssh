{{ if .Values.ssh.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub-ssh
  labels:
    app: {{ template "..name" . }}
    chart: {{ template "..chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.ssh.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "..name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "..name" . }}
        release: {{ .Release.Name }}
        component: ssh-server
        hub.jupyter.org/network-access-hub: "true"
      annotations:
        checksum/config-map: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      # We don't need any interaction with k8s API
      automountServiceAccountToken: false 
      volumes:
        - name: secrets
          secret:
            secretName: jupyterhub-ssh
        - name: config
          configMap:
            name: jupyterhub-ssh
      containers:
        - name: server
          image: "{{ .Values.ssh.image.repository }}:{{ .Values.ssh.image.tag }}"
          imagePullPolicy: {{ .Values.ssh.image.pullPolicy }}
          volumeMounts:
            - name: secrets
              mountPath: /etc/jupyterhub-ssh/secrets
              readOnly: true
            - name: config
              mountPath: /etc/jupyterhub-ssh/config
              readOnly: true
          ports:
            - name: ssh
              containerPort: 8022
              protocol: TCP
          resources:
{{ toYaml .Values.ssh.resources | indent 12 }}
    {{- with .Values.ssh.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.ssh.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.ssh.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
